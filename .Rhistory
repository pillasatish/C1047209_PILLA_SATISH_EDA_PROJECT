students_enorlled=length(unique(cyber.security.5_enrolments$learner_id))
students_enorlled
summary(cyber.security.5_enrolments)
enrolled_students=as.data.frame(table(cyber.security.5_enrolments$detected_country))
#removing the row without country code.
enrolled_students=enrolled_students[-c(1),]
#selecting the countries with more than 50 enrollments
countries_with_more_than_50_enrollment=enrolled_students[enrolled_students$Freq>50,]
countries_with_more_than_50_enrollment %>%
ggplot(aes(reorder(Var1,-Freq),Freq))+
geom_bar(stat="identity", fill="#f68060",alpha=.8,width = .6)+
labs(title="No of students enrolled vs countries",x="countires",
y="No. of students enrolled from different countries")+
theme(plot.title = element_text(hjust = 0.5))
#
students_unenrolled=length(cyber.security.5_leaving.survey.responses$left_at)
students_unenrolled
Percentage_unenrolled=(students_unenrolled/students_enorlled)*100
Percentage_unenrolled
merge_enrollment_leaving_survey=
merge.data.frame(cyber.security.5_leaving.survey.responses,cyber.security.5_enrolments,on="learner_id")
unenrolled_students=as.data.frame(table(merge_enrollment_leaving_survey$detected_country))
countries_with_more_than_5_unenrollment=unenrolled_students[unenrolled_students$Freq>5,]
countries_with_more_than_5_unenrollment %>%
ggplot(aes(reorder(Var1,-Freq),Freq))+
geom_bar(stat="identity", fill="#f68060",alpha=.8,width = .6)+
labs(title="No of students unenrolled vs countries",x="countires",
y="No. of students unenrolled from different countries")+
theme(plot.title = element_text(hjust = 0.5))
students_unerolled_plot=as.data.frame(table(cyber.security.5_leaving.survey.responses$leaving_reason))
ggplot(students_unerolled_plot,aes(reorder(Var1,Freq),Freq))+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
coord_flip() +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of stusents unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
g=ggplot(cyber.security.5_video.stats)
g+geom_line(aes(x=step_position,y=europe_views_percentage,colour='EUROPE_VIEWS_PERCENTAGE'))+
geom_line(aes(x=step_position,y=oceania_views_percentage,colour='OCEANIA_VIEWS_PERCENTAGE'))+
geom_line(aes(x=step_position,y=asia_views_percentage,colour='ASIA_VIEWS_PERCENTAGE'))+
geom_line(aes(x=step_position,y=north_america_views_percentage,colour='NORTH_AMERICA_VIEWS_PERCENTAGE'))+
geom_line(aes(x=step_position,y=south_america_views_percentage,colour='SOUTH_AMERICA_VIEWS_PERCENTAGE'))+
geom_line(aes(x=step_position,y=africa_views_percentage,colour='AFRICA_VIEWS_PERCENTAGE'))+
scale_color_discrete("Pattern")+xlab("step position")+ylab("viewed percentage")
length(unique(cyber.security.5_step.activity$learner_id))
#Converting step into chapters to find out students visiting each chapter
#(student visited chapters atleast one time)
#Adding new column to cyber.security.5_step.activity dataset
Convert_step_to_chapter=cyber.security.5_step.activity %>%
mutate(learner_id,chapter=trunc(step))
student_views=as.data.frame(table(Convert_step_to_chapter$chapter))
ggplot(student_views,aes(reorder(Var1,-Freq),Freq))+
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title="Chapters vs total views",x="chapter",y="total views")+
theme(plot.title = element_text(hjust = 0.5))
#the function return the number of students visiting each chapter.
student_visiting=function(x){ #x is dataframe(step.activity dataset modified to convert_step_to_chapter dataframe)
a=c()
for(i in 1:3){
y=x %>%
filter(x$chapter==i)
z=distinct(y,learner_id,.keep_all = TRUE)
b=nrow(z)
a=c(a,b)
}
return(a)
}
No_student_visited_chapter=student_visiting(Convert_step_to_chapter)
plot_student_vistied=data.frame(chapter=c("1","2","3"),
No_of_students_visited=No_student_visited_chapter)
ggplot(plot_student_vistied,aes(x=chapter,y=No_of_students_visited))+
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title="chapter vs students view",x="chapter",y="No.of students visited each chapter")+
theme(plot.title = element_text(hjust = 0.5))
plot_student_vistied %>%
mutate(chapter,percentage=(No_of_students_visited/2708)*100)
df30=as.data.frame(table(cyber.security.5_question.response$quiz_question))
ggplot(df30,aes(Var1,Freq))+geom_point(aes(color=-Freq, size=Freq),show.legend = F) +
coord_flip() + scale_fill_gradient(name="Total no of students attempted")+
labs(title="quiz question vs number of students attempting the quiz",x="quiz questions",
y="No. of students attempt")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(cyber.security.5_video.stats,aes(reorder(step_position,-total_views),total_views))+
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4)+
labs(title="step position vs total views",x="step position",y="total views")+
theme(plot.title = element_text(hjust = 0.5))
load.project()
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
install.packages("ProjectTemplate")
library("ProjectTemplate")
#create.project("21047209_PILLA_SATISH_EDA_PROJECT")
load.project()
students_enorlled=length(unique(cyber.security.5_enrolments$learner_id))
students_enorlled
enrolled_students=as.data.frame(table(cyber.security.5_enrolments$detected_country))
#removing the row without country code.
enrolled_students=enrolled_students[-c(1),]
#selecting the countries with more than 50 enrollments
countries_with_more_than_50_enrollment=enrolled_students[enrolled_students$Freq>50,]
countries_with_more_than_50_enrollment %>%
ggplot(aes(reorder(Var1,-Freq),Freq))+
geom_bar(stat="identity", fill="#f68060",alpha=.8,width = .6)+
labs(title="No of students enrolled vs Countries",x="Countires",
y="No. of students enrolled from different countries")+
theme(plot.title = element_text(hjust = 0.5))
#
students_unenrolled=length(cyber.security.5_leaving.survey.responses$left_at)
students_unenrolled
Percentage_unenrolled=(students_unenrolled/students_enorlled)*100
Percentage_unenrolled
merge_enrollment_leaving_survey=
merge.data.frame(cyber.security.5_leaving.survey.responses,cyber.security.5_enrolments,on="learner_id")
unenrolled_students=as.data.frame(table(merge_enrollment_leaving_survey$detected_country))
countries_with_more_than_5_unenrollment=unenrolled_students[unenrolled_students$Freq>5,]
countries_with_more_than_5_unenrollment %>%
ggplot(aes(reorder(Var1,-Freq),Freq))+
geom_bar(stat="identity", fill="#f68060",alpha=.8,width = .6)+
labs(title="No of students unenrolled vs Countries",x="Countires",
y="No. of students unenrolled from different countries")+
theme(plot.title = element_text(hjust = 0.5))
students_unerolled_plot=as.data.frame(table(cyber.security.5_leaving.survey.responses$leaving_reason))
ggplot(students_unerolled_plot,aes(reorder(Var1,Freq),Freq))+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
coord_flip() +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
g=ggplot(cyber.security.5_video.stats)
g+geom_line(aes(x=step_position,y=europe_views_percentage,colour='Europe view percentage'))+
geom_line(aes(x=step_position,y=oceania_views_percentage,colour='Oceania view percentage'))+
geom_line(aes(x=step_position,y=asia_views_percentage,colour='Asia view percentage'))+
geom_line(aes(x=step_position,y=north_america_views_percentage,colour='North America view percentage'))+
geom_line(aes(x=step_position,y=south_america_views_percentage,colour='South America view percentage '))+
geom_line(aes(x=step_position,y=africa_views_percentage,colour='Africa view percentage'))+
scale_color_discrete("Pattern")+xlab("step position")+ylab("viewed percentage")
enrollment.list=list(cyber.security.1_enrolments,cyber.security.2_enrolments,cyber.security.3_enrolments,cyber.security.4_enrolments,cyber.security.5_enrolments,cyber.security.6_enrolments,cyber.security.7_enrolments)
students_enrollements_over_7_runs=lapply(enrollment.list, function(x) length(unique(x$learner_id)))
students=data.frame(students_enrollements_over_7_runs)
colnames(students)=c("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
students
students <- melt(students)
matplot(t(students), type = "l")
ggplot(t(students))
students_enrollements_over_7_runs
std=function(x){
y=c()
z=length(unique(x$learner_id))
y=c(y,z)
return(y)
}
std(enrollment.list)
std=function(x){
y=c()
z=length(unique(x$learner_id))
y=c(y,z)
return(y)
}
std(cyber.security.1_enrolments)
students=data.frame(students_enrollements_over_7_runs)
students
students_enrollements_over_7_runs
students1array(as.numeric(unlist(students_enrollements_over_7_runs)), dim=c(7, 1, 1))
students1=array(as.numeric(unlist(students_enrollements_over_7_runs)), dim=c(7, 1, 1))
students1
students=data.frame(students1)
students
colnames(students)=c("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
students
ggplot(students)
students
rownames(students)=c("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
students
ggplot(students)
View(students)
rownames(students)=c(runs=("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time"))
rownames(students)=c("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
students
students1
ggplot(students1)
students=data.frame(students1)
students
ggplot(students)
View(students)
colnames(students)=c("runs","students")
colnames(students)=c("runs")
students
rownames(students)=c("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
colnames(students)=c("runs")
colnames(students)=c("runs","a")
students
students
students=data.frame(students1)
students
row_names=data.frame("1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
row_names=data.frame(runs="1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
row_names
row_names=t(row_names)
row_names
merge(row_names,students)
list_of_students=merge(row_names,students)
ggplot(students)
plot(students)
students_enrollements_over_7_runs
list_of_students=merge(row_names,students)
list_of_students
students_enrollements_over_7_runs
row_names=data.frame(runs="1st time","2nd time ","3rd time","4th time","5th time","6th time","7th time")
list_of_students=merge(row_names,students_enrollements_over_7_runs)
list_of_students
list_of_students=rbind(row_names,students_enrollements_over_7_runs)
list_of_students
plot(list_of_students)
list_of_students
list_of_students=t(list_of_students)
list_of_students
list_of_students=rbind(row_names,students_enrollements_over_7_runs)
list_of_students
list_of_students=t(list_of_students)
list_of_students
list_of_students=rbind(students_enrollements_over_7_runs,row_names)
list_of_students
list_of_students=t(list_of_students)
list_of_students
plot(list_of_students)
list_of_students=t(as.numeric(list_of_students))
list_of_students
list_of_students
plot(list_of_students)
list_of_students=rbind(students_enrollements_over_7_runs,row_names)
list_of_students
students_enrollements_over_7_runs
students1=array(as.numeric(unlist(students_enrollements_over_7_runs)), dim=c(7, 1, 1))
students1
students=data.frame(students1)
students
c=tibble::rownames_to_column(students,"runs")
c
plot(c)
students1
students=data.frame(students1)
students
c=tibble::rownames_to_column(students,"runs")
c
plot(c)
View(c)
ggplot(c,aes(reorder(runs,students1),students1))+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
coord_flip() +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(c,aes(reorder(runs,students1),students1))+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(c,aes(runs,students1),students1)+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
View(c)
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
install.packages("ProjectTemplate")
library("ProjectTemplate")
#create.project("B21047209_PILLA_SATISH_EDA_PROJECT")
load.project()
install.packages("latexpdf")
library(latexpdf)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
load.project()
setwd("C:/Users/pilla/Desktop/C1047209_PILLA_SATISH_EDA_PROJECT")
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", col = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
#Percentage of Learners Enrolled Over Each Batch
enrolled_3D_plot=pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
#Percentage of Learners Enrolled Over Each Batch
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
library(plotrix)
#Percentage of Learners Enrolled Over Each Batch
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
#Plotting the percentage of students joining in each Iteration of the course.
data <- stud_count$student_count
# Finding the total number of enrollments over the course run
enrollment_data=list(cyber_security_1_enrolments,cyber_security_2_enrolments,cyber_security_3_enrolments,cyber_security_4_enrolments,cyber_security_5_enrolments,cyber_security_6_enrolments,cyber_security_7_enrolments)
########################################################################################################
#                                   F I L E   D E S C R I P T I O N                                    #
########################################################################################################
#                                                                                                      #
# This file contains the code related to Data Munging: transformations like, joining different tables, #
# merging tables row wise and column wise, text processing, melting table from wide format to long,    #
# column and row renaming, column and row deletion, calculating different statistics like column mean, #
# normalizing the data, etc.                                                                           #
########################################################################################################
#Reading all the enrollments files
cyber_security_1_enrolments <- read_csv("data/cyber-security-1_enrolments.csv")
cyber_security_2_enrolments <- read_csv("data/cyber-security-2_enrolments.csv")
cyber_security_3_enrolments <- read_csv("data/cyber-security-3_enrolments.csv")
cyber_security_4_enrolments <- read_csv("data/cyber-security-4_enrolments.csv")
cyber_security_5_enrolments <- read_csv("data/cyber-security-5_enrolments.csv")
cyber_security_6_enrolments <- read_csv("data/cyber-security-6_enrolments.csv")
cyber_security_7_enrolments <- read_csv("data/cyber-security-7_enrolments.csv")
library(readr)
cyber_security_1_enrolments <- read_csv("data/cyber-security-1_enrolments.csv")
cyber_security_2_enrolments <- read_csv("data/cyber-security-2_enrolments.csv")
cyber_security_3_enrolments <- read_csv("data/cyber-security-3_enrolments.csv")
cyber_security_4_enrolments <- read_csv("data/cyber-security-4_enrolments.csv")
cyber_security_5_enrolments <- read_csv("data/cyber-security-5_enrolments.csv")
cyber_security_6_enrolments <- read_csv("data/cyber-security-6_enrolments.csv")
cyber_security_7_enrolments <- read_csv("data/cyber-security-7_enrolments.csv")
enrolments = rbind(cyber_security_1_enrolments, cyber_security_2_enrolments, cyber_security_3_enrolments, cyber_security_4_enrolments, cyber_security_5_enrolments, cyber_security_6_enrolments, cyber_security_7_enrolments)
# Finding the total number of enrollments over the course run
enrollment_data=list(cyber_security_1_enrolments,cyber_security_2_enrolments,cyber_security_3_enrolments,cyber_security_4_enrolments,cyber_security_5_enrolments,cyber_security_6_enrolments,cyber_security_7_enrolments)
# to get a list of enrollments from each of the file
student_count=lapply(enrollment_data, function(x) length(unique(x$learner_id)))
student_count =  array(as.numeric(unlist(student_count)), dim = c(7,1,1))
#student_enrollnmnent_cnt_un
stud_count = data.frame(student_count)
#adding an additional column run to plot the graph
stud_count = tibble::rownames_to_column(stud_count, "Runs")
stud_count
#Plotting the percentage of students joining in each Iteration of the course.
data <- stud_count$student_count
data
chapters<-c('1st batch','2nd batch','3rd batch','4th batch','5th batch','6th batch','7th batch')
#calculates the percentage of the values
percentage<-round(data/sum(data)*100)
#concatenates the strings with percentages
labels_new<-paste(chapters,percentage)
labels_new
#concatenates the above output with the '%' symbol
final_labels<-paste(labels_new,'%',sep = "")
final_labels
lab <- paste0(round(data/sum(data) * 100, 2), "%")
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", col = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
library(ggplot2)
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", col = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
library(viridis)
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", col = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
#Percentage of Learners Enrolled Over Each Batch
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
enrollments_pt
enrolled_3D_plot
#Percentage of Learners Enrolled Over Each Batch
enrolled_3D_plot=pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
enrolled_3D_plot
enrolled_3D_plot
#Percentage of Learners Enrolled Over Each Batch
enrolled_3D_plot=pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
#Percentage of Learners Enrolled Over Each Batch
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.5,shade =1.75,radius =1)
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =0.5,shade =1.75,radius =1)
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =0.75,shade =1.75,radius =1)
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", col = viridis(7))+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", fill = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", fill = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle(main="Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
# plotting the enrollments
enrollments_plot=ggplot(data=stud_count,aes(Runs,student_count,student_count))+geom_bar(stat="identity", fill = viridis(7), alpha=.8, width=.5)+
geom_text(aes(label = student_count, vjust = 1))+
ggtitle("Number of Learners Enrolled Over Different Iteration")+
xlab("Batches") +
ylab("Number of Enrolment(learners)")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
enrollments_pt=enrollments_plot+ geom_line(data = stud_count, mapping = aes(x = Runs, y = student_count, group =1), col = "blue",size = 1.5)
enrollments_pt
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library("ProjectTemplate")
load.project()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
load.project()
source("src/3_hypothesis.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library("ProjectTemplate")
load.project()
source("src/3_hypothesis.R")
source('./src/eda.R')
source('./src/eda.R')
source('./src/eda.R')
source('./src/eda.R')
source('/src/eda.R')
source('/eda.R')
source('eda.R')
enrollments_pt
ggsave(file.path('graphs', 'enrollments_pt.png'))
library(png)
enrollments_pt
ggsave(file.path('graphs', 'enrollments_pt.png'))
enrollments_pt
ggsave(file.path('graphs', 'enrollments_pt_1.png'))
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
ggsave(file.path('graphs', 'pie.3D.png'))
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
ggsave(file.path('/graphs', 'pie.3D.png'))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
ggsave(file.path('/graphs', 'pie.3D.png'))
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
ggsave(file.path('graphs', 'pie.3D.png'))
enrollments_pt
ggsave(file.path('graphs', 'enrollments_pt.png'))
include_graphics(paste0(getwd(),"/graphs/enrollments_pt.png"))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
include_graphics(paste0(getwd(),"/graphs/enrollments_pt.png"))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
include_graphics(paste0(getwd(),"/graphs/enrollments_pt.png"))
include_graphics(paste0(getwd(),"/graphs/pie.3D.png"))
include_graphics(paste0(getwd(),"/graphs/pie.3D.png"))
pie3d=pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
ggsave(file.path('graphs', 'pie3d.png'))
#Percentage of Learners Enrolled Over Each Batch
pie3d=pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
pie3d
lab
pie_plot <- plot_ly(data, labels = ~final_labels, values = ~stud_count$student_count, type = 'pie') %>%
layout(title = "Title",
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pie_plot
pie_plot <- plot_ly(stud_count, labels = ~final_labels, values = ~stud_count$student_count, type = 'pie') %>%
layout(title = "Title",
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
# Give the chart file a name.
png(file = "3d_pie_chart.png")
# Plot the chart.
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
# Save the file.
dev.off()
#ggsave(file.path('graphs', 'pie3d.png'))
# Give the chart file a name.
png(file.path('graphs',"3d_pie_chart.png"))
# Plot the chart.
pie3D(data,labels = final_labels,explode = 0.05,main='Percentage of Learners Enrolled Over Each Batch',labelcex =1.2,shade =1.75,radius =1)
# Save the file.
dev.off()
#ggsave(file.path('graphs', 'pie3d.png'))
include_graphics(paste0(getwd(),"/graphs/3d_pie_chart.png"))
include_graphics(paste0(getwd(),"/graphs/enrollments_pt.png"))
include_graphics(paste0(getwd(),"/graphs/3d_pie_chart.png"))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source('./src/eda.R')
include_graphics(paste0(getwd(),"/graphs/3d_pie_chart.png"))
