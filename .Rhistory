plot(c)
View(c)
ggplot(c,aes(reorder(runs,students1),students1))+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
coord_flip() +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(c,aes(reorder(runs,students1),students1))+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(c,aes(runs,students1),students1)+
geom_bar(stat="identity", fill="#f68060", alpha=.8, width=.5) +
labs(title="No of students unenrolled vs reasons",x="Reasons",y="No .of students unenrolled")+
theme(plot.title = element_text(hjust = 0.5))
View(c)
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
install.packages("ProjectTemplate")
library("ProjectTemplate")
#create.project("B21047209_PILLA_SATISH_EDA_PROJECT")
load.project()
install.packages("latexpdf")
library(latexpdf)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
load.project()
setwd("C:/Users/pilla/Desktop/C1047209_PILLA_SATISH_EDA_PROJECT")
#Reading all the video_stat dataset files
cyber_security_3_video_stats <- read_csv("data/cyber-security-3_video-stats.csv")
cyber_security_4_video_stats <- read_csv("data/cyber-security-4_video-stats.csv")
cyber_security_5_video_stats <- read_csv("data/cyber-security-5_video-stats.csv")
library(readr)
#Reading all the video_stat dataset files
cyber_security_3_video_stats <- read_csv("data/cyber-security-3_video-stats.csv")
cyber_security_4_video_stats <- read_csv("data/cyber-security-4_video-stats.csv")
cyber_security_5_video_stats <- read_csv("data/cyber-security-5_video-stats.csv")
cyber_security_6_video_stats <- read_csv("data/cyber-security-6_video-stats.csv")
cyber_security_7_video_stats <- read_csv("data/cyber-security-7_video-stats.csv")
video_stat= rbind(cyber_security_3_video_stats, cyber_security_4_video_stats, cyber_security_5_video_stats, cyber_security_6_video_stats, cyber_security_7_video_stats)
View(video_stat)
# Finding which device is being use more often to access the course content.
desktop_percentage = video_stat %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
library(dplyr)
library(dbplyr)
library(dtplyr)
# Finding which device is being use more often to access the course content.
desktop_percentage = video_stat %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video_stat %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video_stat %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device = as.data.frame(colMeans(device[2:4]))
colnames(device) = c("Usage")
device
# Finding which device is being use more often to access the course content.
desktop_percentage = video_stat %>% group_by(title) %>% summarize(desktop = round(mean(desktop_device_percentage),2))
desktop_percentage
# Finding which device is being use more often to access the course content.
desktop_percentage = video_stat %>% group_by(title) %>% summarize(desktop = round(mean(desktop_device_percentage),2))
mobile_percentage = video_stat %>% group_by(title) %>% summarize(mobile = round(mean(mobile_device_percentage),2))
tablet_percentage = video_stat %>% group_by(title) %>% summarize(tablet = round(mean(tablet_device_percentage),2)
# Finding which device is being use more often to access the course content.
desktop_percentage = video_stat %>% group_by(title) %>% summarize(desktop = round(mean(desktop_device_percentage),2))
mobile_percentage = video_stat %>% group_by(title) %>% summarize(mobile = round(mean(mobile_device_percentage),2))
tablet_percentage = video_stat %>% group_by(title) %>% summarize(tablet = round(mean(tablet_device_percentage),2))
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device = as.data.frame(colMeans(device[2:4]))
colnames(device) = c("Usage")
device
device
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device = as.data.frame(round(colMeans(device[2:4]),2))
colnames(device) = c("Usage")
device
# Basic piechart
ggplot(device, aes(x="", y=Usage, fill="")) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
library(ggplot2)
# Basic piechart
ggplot(device, aes(x="", y=Usage, fill="")) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device = as.data.frame(round(colMeans(device[2:4]),2))
colnames(device) = c("Device","Usage")
device
device = as.data.frame(round(colMeans(device[2:4]),2))
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device = as.data.frame(round(colMeans(device[2:4]),2))
colnames(device) = c("Device","Usage")
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device
device = as.data.frame(round(colMeans(device[2:4]),2))
device
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device = as.data.frame(round(colMeans(device[2:4]),2))
colnames(device) = c("Usage")
# Basic piechart
ggplot(device, aes(x=row.names(device), y=Usage, fill=row.names(device))) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
# Basic piechart
ggplot(device, aes(x=row.names(device), y=Usage, fill=row.names(device))) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = group), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
# Basic piechart
ggplot(device, aes(x=row.names(device), y=Usage, fill=row.names(device))) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = row.names(device)), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
# Compute the position of labels
device <- device %>%
arrange(desc(row.names(device))) %>%
mutate(prop = Usage / sum(device$Usage) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
ggplot(device, aes(x=row.names(device), y=Usage, fill=row.names(device))) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = row.names(device)), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device
#Dataframe
device = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
device
device = as.data.frame(round(colMeans(device[2:4]),2))
device
colnames(device) = c("Usage")
device
# Basic piechart
ggplot(device, aes(x=row.names(device), y=Usage, fill=row.names(device))) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none")
ggplot(device, aes(x = "", y = Usage, fill = row.names(device))) +
geom_col(color = "black") +
geom_label(aes(label = labels), color = c(1, "white", "white"),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
guides(fill = guide_legend(title = "Usage")) +
scale_fill_viridis_d() +
coord_polar(theta = "y") +
theme_void()
ggplot(device, aes(x = "", y = Usage, fill = row.names(device))) +
geom_col(color = "black") +
geom_label(aes(label = Usage), color = c(1, "white", "white"),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
guides(fill = guide_legend(title = "Usage")) +
scale_fill_viridis_d() +
coord_polar(theta = "y") +
theme_void()
ggplot(device, aes(x = "", y = Usage, fill = row.names(device))) +
geom_col(color = "black") +
geom_label(aes(label = Usage), color = c("white", "white", "white"),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
guides(fill = guide_legend(title = "Usage")) +
scale_fill_viridis_d() +
coord_polar(theta = "y") +
theme_void()
########################################################################################################
#Most widely used devices
ggplot(device, aes(x = "", y = Usage, fill = row.names(device))) +
geom_col(color = "black") +
geom_label(aes(label = Usage), color = c("white", "white", "white"),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
guides(fill = guide_legend(title = "Usage")) +
scale_fill_viridis_d() +
coord_polar(theta = "y") +
ggtitle("Most Widely Used Device to access the content")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
########################################################################################################
#Most widely used devices
device_used=ggplot(device, aes(x = "", y = Usage, fill = row.names(device))) +
geom_col(color = "black") +
geom_label(aes(label = Usage), color = c("white", "white", "white"),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
guides(fill = guide_legend(title = "Usage")) +
scale_fill_viridis_d() +
coord_polar(theta = "y") +
ggtitle("Most Widely Used Device to Access The Content")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
cyber_security_1_step_activity <- read_csv("data/cyber-security-1_step-activity.csv")
cyber_security_2_step_activity <- read_csv("data/cyber-security-2_step-activity.csv")
cyber_security_3_step_activity <- read_csv("data/cyber-security-3_step-activity.csv")
cyber_security_4_step_activity <- read_csv("data/cyber-security-4_step-activity.csv")
cyber_security_5_step_activity <- read_csv("data/cyber-security-5_step-activity.csv")
cyber_security_6_step_activity <- read_csv("data/cyber-security-6_step-activity.csv")
cyber_security_7_step_activity <- read_csv("data/cyber-security-7_step-activity.csv")
step_activity= rbind(cyber_security_1_step_activity, cyber_security_2_step_activity, cyber_security_3_step_activity, cyber_security_4_step_activity, cyber_security_5_step_activity, cyber_security_6_step_activity, cyber_security_7_step_activity)
# unique no students visiting each chapter
unique_student=step_activity %>%
mutate(learner_id,chapter=trunc(step))
# function to remove duplicates and classify to each chapters
chap_class=function(x){
a=c()
for(i in 1:3){
y=x %>%
filter(x$chapter==i)
z=distinct(y,learner_id,.keep_all = TRUE)
b=nrow(z)
a=c(a,b)
}
return(a)
}
student_visited_count = chap_class(unique_student)
student_visited_count
student_visited_count_df=data.frame(chapter=c("1","2","3"),stud_per_chap=student_visited_count)
student_visited_count_df
########################################################################################################
#Unique number of students going through each module
ggplot(student_visited_count_df,aes(x=chapter,y=stud_per_chap ))+geom_bar(stat="identity", fill="red", alpha=.6, width=.4) +
geom_text(aes(label = stud_per_chap, vjust = 1)) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique Number Of Students Going Through Each MOdule")+
theme_bw()
########################################################################################################
#Unique number of students going through each module
ggplot(student_visited_count_df,aes(x=chapter,y=stud_per_chap ))+geom_bar(stat="identity", fill="chapter", alpha=.6, width=.4,palette = "jco") +
geom_text(aes(label = stud_per_chap, vjust = 1)) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique Number Of Students Going Through Each MOdule")+
theme_bw()
student_visited_count_df
Unique_visted=ggbarplot(student_visited_count_df, x = "chapter", y = "stud_per_chap",
fill = "chapter", color = "chapter", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Module Number')+ylab("Number of Unique Students")+
ggtitle("Unique Number Of Students Going Through Each MOdule")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
library(ggpubr)
library(ggplot2, lib.loc = "C:/Program Files/R/R-4.1.2/library")
Unique_visted=ggbarplot(student_visited_count_df, x = "chapter", y = "stud_per_chap",
fill = "chapter", color = "chapter", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Module Number')+ylab("Number of Unique Students")+
ggtitle("Unique Number Of Students Going Through Each MOdule")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
Unique_visted
Unique_visted=ggbarplot(student_visited_count_df, x = "chapter", y = "stud_per_chap",
fill = "chapter", color = "chapter", palette = "jco")+geom_bar(stat="identity", alpha=.6, width=.4,palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Module Number')+ylab("Number of Unique Students")+
ggtitle("Unique Number Of Students Going Through Each MOdule")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
Unique_visted
Unique_visted=ggbarplot(student_visited_count_df, x = "chapter", y = "stud_per_chap",
fill = "chapter", color = "chapter", palette = "jco")+geom_text(aes(label = stud_per_chap, vjust = 1))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Module Number')+ylab("Number of Unique Students")+
ggtitle("Unique Number Of Students Going Through Each MOdule")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
Unique_visted
# data frame by weeks
week_1= step_activity %>%
filter(week_number %in% c(1))
week_2= step_activity %>%
filter(week_number %in% c(2))
week_3= step_activity %>%
filter(week_number %in% c(3))
# VIDEOS BY WEEK
week_1_vid= week_1 %>%
filter(step_number %in% c(5,14,17,19))
week_2_vid= week_2 %>%
filter(step_number %in% c(4,11,17))
week_3_vid= week_3 %>%
filter(step_number %in% c(2,14,15))
# ARTICLES BY WEEK
week_1_art= week_1 %>%
filter(step_number %in% c(3,6,7,9,12,13,15,16,18))
week_2_art= week_2 %>%
filter(step_number %in% c(2,5,7,9,10,12,13,14,15,16,18,19,21,22))
week_3_art= week_3 %>%
filter(step_number %in% c(5,6,7,8,9,10,13,17,20))
# QUIZ BY WEEK
week_1_qiz= week_1 %>%
filter(step_number %in% c(8))
week_2_qiz= week_2 %>%
filter(step_number %in% c(8,20))
week_3_qiz= week_3 %>%
filter(step_number %in% c(11))
# DISCUSSION BY WEEK
week_1_dis= week_1 %>%
filter(step_number %in% c(2,10,11))
week_2_dis= week_2 %>%
filter(step_number %in% c(6,23))
week_3_dis= week_3 %>%
filter(step_number %in% c(4,12,16,19))
# COMBING VIDEOS , ARTICLES , QUIZ , DISCUSIION TO INDIVIDUAL DATA FRAME
video_stat = rbind(week_1_vid, week_2_vid, week_3_vid)
article_stat=  rbind(week_1_art, week_2_art, week_3_art )
quiz_stat = rbind(week_1_qiz, week_2_qiz, week_3_qiz)
discussion_stat = rbind(week_1_dis, week_2_dis, week_3_dis)
video_stat
article_stat
# Filterning The Unique Numbers and Counting Through The Week
unique_stat_2=function(x){
a=c()
for(i in 1:3){
y=x %>%
filter(x$week_number==i)
z=distinct(y,learner_id,.keep_all = TRUE)
b=nrow(z)
a=c(a,b)
}
return(a)
}
unique_video_count = unique_stat_2(video_stat)
unique_article_count = unique_stat_2(article_stat)
unique_quiz_count = unique_stat_2(quiz_stat)
unique_discussion_count = unique_stat_2(discussion_stat)
# Dataframe
stat_count = data.frame(Video = unique_video_count , article = unique_article_count, quiz= unique_quiz_count, disscusion = unique_discussion_count )
stat_count =t(stat_count)
colnames(stat_count) =  c('Module-1','Module-2', 'Module-3')
stat_count  = data.frame(stat_count)
# BELOW STEPS FOR CLUSTER PLOT
stat_count_2 = tibble::rownames_to_column(stat_count, "Delivery_Method")
cust_plotting = stat_count_2 %>% gather(key = Modules, value = Value, Module.1:Module.3)
library(tidyr)
cust_plotting = stat_count_2 %>% gather(key = Modules, value = Value, Module.1:Module.3)
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method)) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme_update(plot.title = element_text(hjust = 0.3))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Modules", palette = "jco")) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme_update(plot.title = element_text(hjust = 0.3))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme_update(plot.title = element_text(hjust = 0.3))
ggplot()+
geom_bar(cust_plotting, mapping = aes(x = Modules, y = Value, fill = Delivery_Method), stat = 'identity', position = position_dodge())
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme_update(plot.title = element_text(hjust = 0.3))+scale_fill_brewer(palette = "Set3")
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme_update(plot.title = element_text(hjust = 0.3))+scale_fill_brewer(palette = "GnBu")
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme_update(plot.title = element_text(hjust = 0.3))+scale_fill_brewer(palette = "jco")
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_col(position = "dodge")+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("UNIQUE NO OF STUDENTS ENGAGING IN DELIVERY METHODS")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+scale_fill_brewer(palette = "jco")
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+scale_fill_brewer(palette = "jco")
library(viridis)
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+scale_fill_brewer(palette = "jco")
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method, color = "Delivery_Method", palette = "jco")) + geom_bar(position="fill", stat="identity") +
scale_fill_viridis(discrete = T) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method)) + geom_bar(position="fill", stat="identity") +
scale_fill_viridis(discrete = T) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method)) + geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
cust_plotting
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method)) + geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T) +facet_wrap(~Delivery_Method)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method)) + geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T) +facet_wrap(~Delivery_Method)+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
#Unique No of Students Engaging In Different Delivery Methods
Delivery_methods=ggplot(cust_plotting, aes(Modules, Value, fill = Delivery_Method)) + geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T) +facet_wrap(~Delivery_Method)+
geom_text(
aes(label = Value), size = 3,
vjust = 1.5, position = position_dodge(.9)
)+
xlab("Module No ") +
ylab("No. of Unique Students") +
ggtitle("Unique No of Students Engaging In Different Delivery Methods")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
