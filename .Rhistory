countryName
countrycode(sourcevar = countries_count$Var1, "iso2c", "country.name")
country_name=countrycode(sourcevar = countries_count$Var1, "iso2c", "country.name")
country_name
countries_count <- cbind(countries_count, country = country_name)
countries_count
library(maps)
library(ggplot2)
library(countrycode)
world_map <- map_data("world")
ggplot(countries_count) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country, fill = n), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Worldwide Publications") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(countries_count) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country, fill = countries_count$country), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Worldwide Publications") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(countries_count) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country, fill = countries_count$Freq), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Worldwide Publications") +
expand_limits(x = world_map$long, y = world_map$lat)
library(rworldmap)
#create a map-shaped window
mapDevice('x11')
countries_count = data.frame(table(enrolments$detected_country))
#countries_count
countries_with_greater_100 = countries_count[countries_count$Freq>100,]
#countries_count
countries_with_greater_100 = countries_count[countries_count$Freq>100,]
countries_count$Var1 = as.character(countries_count$Var1)
library(countrycode)
country_name=countrycode(sourcevar = countries_count$Var1, "iso2c", "country.name")
#country_name
countries_count <- cbind(countries_count, country = country_name)
countries_count
world_map <- map_data("world")
ggplot(countries_count) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country, fill = countries_count$Freq), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Worldwide Publications") +
expand_limits(x = world_map$long, y = world_map$lat)
world <- map_data("world")
world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = value)) + geom_polygon()
ggplot(countries_count) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country, fill = Freq), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Worldwide Publications") +
expand_limits(x = world_map$long, y = world_map$lat)
world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon()
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon()
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students enrolling form different countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = ~Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students enrolling form different countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students enrolling form different countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
countries_with_greater_500 = countries_count[countries_count$Freq>100,]
countries_with_greater_500
countries_with_greater_500 = countries_count[countries_count$Freq>500,]
countries_with_greater_500
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
scale_fill_viridis("", na.value = "gray90") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank())
library(viridis)
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
scale_fill_viridis("", na.value = "gray90") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank())
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) +
geom_polygon(color = "white", size = 0.2) +) + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
scale_fill_viridis("", na.value = "gray90") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank())
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) +
geom_polygon(color = "white", size = 0.2) + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
scale_fill_viridis("", na.value = "gray90") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank())
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
scale_fill_viridis("", na.value = "gray90") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank())
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))+
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
countries_with_greater_500
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "Var1", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "country", by.y = "region", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "Freq", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..Freq.., alpha = 0.5), bins = 30, data = without_na, geom = "polygon")+
xlab("Longitude")+
ylab("Latitude")+
theme(text = element_text(size = 20))
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..Freq.., alpha = 0.5), bins = 30, data = countries_count, geom = "polygon")+
xlab("Longitude")+
ylab("Latitude")+
theme(text = element_text(size = 20))
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.5), bins = 30, data = countries_count, geom = "polygon")+
xlab("Longitude")+
ylab("Latitude")+
theme(text = element_text(size = 20))
country_plot = ggplot() +geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.5), bins = 30, data = countries_count, geom = "polygon")+
xlab("Longitude")+
ylab("Latitude")+
theme(text = element_text(size = 20))
country_plot
#represnting countires with most number of enrollments.
countries_plot=world %>%
merge(countries_count, by.x = "region", by.y = "country", all.x = T) %>%
arrange(group, order) %>%
ggplot(aes(x = long, y = lat, group = group, fill = Freq)) + geom_polygon() + xlab(" Longitude") +
ylab("Latitude") +
ggtitle("Students Enrolling form Different Countries")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
countries_plot
countries_with_greater_500
na.omit(countries_with_greater_500)
ggplot(countries_with_greater_500,aes(reorder(country,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(10), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("COUNTRIES WITH ENROLLMENTS GREATER THAN 40 STUDENTS")
ggplot(countries_with_greater_500,aes(reorder(Var1,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(10), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")
ggplot(countries_with_greater_500,aes(reorder(Var1,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")
ggplot(countries_with_greater_500,aes(reorder(Var1,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(11), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")
country_500=na.omit(countries_with_greater_500)
ggplot(country_500,aes(reorder(Var1,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(11), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")
ggplot(country_500,aes(reorder(Var1,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(10), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")
ggplot(country_500,aes(reorder(country,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(10), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")
ggplot(country_500,aes(reorder(country,-Freq),Freq))+geom_bar(stat="identity", fill=viridis(10), alpha=.8, width=.5) +
geom_text(aes(label = Freq, vjust = 1))+
xlab("Countries") +
ylab("No. of Enrolment")+
ggtitle("Countries With Enrollments Greater Than 500 Students")+
theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
########################################################################################################
#gender distrubtion
barplot(
table(enrolments$gender),
main="Enrolment based upon gender",
xlab="Gender",
ylab="Count",
col=rainbow(4),
ylim=c(0, 800)
)
# Removing unknown from each column(gender, education level, employment status, employment area, age range)...
gender = data.frame(gender = enrolments$gender[enrolments$gender != 'Unknown'])
gender = as.data.frame(table(gender$gender))
edu_lvl = data.frame(edu_lvl = enrolments$highest_education_level[enrolments$highest_education_level != 'Unknown'])
edu_lvl = as.data.frame(table(edu_lvl$edu_lvl))
emp_status = data.frame(emp_status = enrolments$employment_status[enrolments$employment_status != 'Unknown'])
emp_status = as.data.frame(table(emp_status$emp_status))
emp_area = data.frame(emp_area = enrolments$employment_area[enrolments$employment_area != 'Unknown'])
emp_area = as.data.frame(table(emp_area$emp_area))
age_range = data.frame(age_range = enrolments$age_range[enrolments$age_range != 'Unknown'])
age_range = as.data.frame(table(age_range$age_range))
gender
########################################################################################################
#gender distrubtion
barplot(
table(gender$Var1),
main="Enrolment based upon gender",
xlab="Gender",
ylab="Count",
col=rainbow(4),
ylim=c(0, 800)
)
########################################################################################################
#gender distrubtion
ggbarplot(gender, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
install.packages("ggpubr")
library(ggpubr)
########################################################################################################
#gender distribution
ggbarplot(gender, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
education_level_plot
#employmnet status
emp_status_plot=ggbarplot(emp_status, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
emp_status_plot
# employment area
employment_area_plot=ggbarplot(emp_area, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
employment_area_plot
#age range
age_range_plot=ggbarplot(age_range, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
age_range_plot
par(mfrow=c(2,2))
plot(gender_plot)
par(mfrow=c(2,2))
plot(gender_plot)
plot(age_range_plot)
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
education_level_plot
# employment area
employment_area_plot=ggbarplot(emp_area, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
employment_area_plot
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
education_level_plot
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.2, hjust=1))
education_level_plot
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=0.5))
education_level_plot
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
education_level_plot
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
education_level_plot
education_level_plot=ggbarplot(edu_lvl, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
education_level_plot
########################################################################################################
#gender distribution
gender_plot=ggbarplot(gender, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+xlab('Gender')+ylab("")+
ggtitle("Gender Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
education level
gender_plot
#age range
age_range_plot=ggbarplot(age_range, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+xlab('Age')+ylab("")+
ggtitle("Age Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
age_range_plot
#employmnet status
emp_status_plot=ggbarplot(emp_status, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")
emp_status_plot
# employment area
employment_area_plot=ggbarplot(emp_area, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
employment_area_plot
#employmnet status
emp_status_plot=ggbarplot(emp_status, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Employment Status')+ylab("")+
ggtitle("Employment status Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
emp_status_plot
age_range = data.frame(age_range = enrolments$age_range[enrolments$age_range != 'Unknown'])
age_range = as.data.frame(table(age_range$age_range),colnames("age_range","Freq"))
age_range = as.data.frame(table(age_range$age_range),colnames("age_range","Freq"))
age_range = as.data.frame(table(age_range$age_range))
colnames(age_range)<- c("Age Range","Freq")
age_range
colnames(emp_area)<- c("Employment area","Freq")
colnames(emp_area)<- c("Employment area","Freq")
colnames(emp_status)<- c("Employment status","Freq")
colnames(edu_lvl)<- c("Education Level","Freq")
colnames(gender)<- c("Gender","Freq")
########################################################################################################
#gender distribution
gender_plot=ggbarplot(gender, x = "Var1", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+xlab('Gender')+ylab("")+
ggtitle("Gender Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
########################################################################################################
#gender distribution
gender_plot=ggbarplot(gender, x = "Gender", y = "Freq",
fill = "Var1", color = "Var1", palette = "jco")+xlab('Gender')+ylab("")+
ggtitle("Gender Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
gender_plot
########################################################################################################
#gender distribution
gender_plot=ggbarplot(gender, x = "Gender", y = "Freq",
fill = "Gender", color = "Gender", palette = "jco")+xlab('Gender')+ylab("")+
ggtitle("Gender Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
gender_plot
education_level_plot=ggbarplot(edu_lvl, x = "Education Level", y = "Freq",
fill = "Education Level", color = "Education Level", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Education Level')+ylab("")+
ggtitle("Eduation level Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
education_level_plot
education_level_plot
#employmnet status
emp_status_plot=ggbarplot(emp_status, x = "Employment status", y = "Freq",
fill = "Employment status", color = "Employment status", palette = "jco")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab('Employment Status')+ylab("")+
ggtitle("Employment status Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
emp_status_plot
#age range
age_range_plot=ggbarplot(age_range, x = "Age Range", y = "Freq",
fill = "Age Range", color = "Age Range", palette = "jco")+xlab('Age')+ylab("")+
ggtitle("Age Distrubtion")+theme(plot.title = element_text(hjust = 0.5,face = 'bold'))
age_range_plot
g=colnames(gender)<- c("Gender","Freq")
g
colnames(gender)<- c("Gender","Freq")
gender
gender = as.data.frame(table(gender$gender))
gender
# Removing unknown from each column(gender, education level, employment status, employment area, age range)...
gender = data.frame(gender = enrolments$gender[enrolments$gender != 'Unknown'])
gender = as.data.frame(table(gender$gender))
gender
edu_lvl = data.frame(edu_lvl = enrolments$highest_education_level[enrolments$highest_education_level != 'Unknown'])
edu_lvl = as.data.frame(table(edu_lvl$edu_lvl))
emp_status = data.frame(emp_status = enrolments$employment_status[enrolments$employment_status != 'Unknown'])
emp_status = as.data.frame(table(emp_status$emp_status))
emp_area = data.frame(emp_area = enrolments$employment_area[enrolments$employment_area != 'Unknown'])
emp_area = as.data.frame(table(emp_area$emp_area))
age_range = data.frame(age_range = enrolments$age_range[enrolments$age_range != 'Unknown'])
age_range = as.data.frame(table(age_range$age_range))
